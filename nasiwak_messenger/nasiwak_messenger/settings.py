"""
Django settings for nasiwak_messenger project.

Generated by 'django-admin startproject' using Django 5.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# ✅ Add these imports at the top

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

from corsheaders.defaults import default_headers
from corsheaders.defaults import default_methods
from dotenv import load_dotenv
load_dotenv()

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = False


ALLOWED_HOSTS = ['13.232.126.102', 'localhost', '127.0.0.1']

CSRF_TRUSTED_ORIGINS = ['https://13.232.126.102',"http://localhost:5173",'https://13.232.126.102:5173']

# Application definition

INSTALLED_APPS = [
    "corsheaders",
    'daphne',  # Required for ASGI support
    "sslserver",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # added 
    'django.contrib.sites',
    # 'django-extensions',
    
    # Third-party apps
    'rest_framework',
    'rest_framework.authtoken',
    'rest_framework_simplejwt.token_blacklist',
    # 'dj_rest_auth',
    # 'dj_rest_auth.registration',
    
    # Our apps
    'authentication',
    'chat',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # Allow frontend to connect
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Added
    # 'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'nasiwak_messenger.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION = 'nasiwak_messenger.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'Nasiwak_messenger', 
        'USER': 'Nasiwakadmin',   
        'PASSWORD': 'NasiwakM3ss3ng3r_2025!',   
        'HOST': 'nasiwakmessenger.c3wmwqug8lko.ap-south-1.rds.amazonaws.com',  
        'PORT': '5432',
        'OPTIONS': {
            'client_encoding': 'UTF8',  # Ensure UTF-8 encoding
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# Extra Added 

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
    "https://13.232.126.102",
    "http://localhost:5173",


    
]
CORS_ALLOW_METHODS = list(default_methods)  # ✅ Allow all HTTP methods
CORS_ALLOW_HEADERS = list(default_headers) + ["Authorization","Content-Type","X-CSRFToken"]
CORS_EXPOSE_HEADERS = ["Content-Length", "X-CSRFToken"]

# ✅ Fix Preflight (OPTIONS request)
CORS_PREFLIGHT_MAX_AGE = 86400  # Cache OPTIONS response for 24 hours


# Authentication settings
AUTH_USER_MODEL = 'authentication.CustomUser'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=1),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,  # This prevents the Foreign Key issue
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
}
# SITE_ID = 1  # Required for django-allauth

# # Email verification (Optional)
# ACCOUNT_EMAIL_VERIFICATION = "none"
# # ACCOUNT_AUTHENTICATION_METHOD = "email"
# ACCOUNT_LOGIN_METHODS = {'email'}
# ACCOUNT_EMAIL_REQUIRED = True



# # JWT Settings
# REST_USE_JWT = True
# JWT_AUTH_COOKIE = 'access_token'
# JWT_AUTH_REFRESH_COOKIE = 'refresh_token'

# # to varify email id and to send otp

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.office365.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'kushalnasiwak@outlook.com'
# EMAIL_HOST_PASSWORD = 'Nasiwak@159753'

# WebSockets settings
ASGI_APPLICATION = 'nasiwak_messenger.asgi.application'

# Use Redis as the WebSockets message layer backend
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",  # Change to Redis in production
        # "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            # "hosts": [("13.232.126.102", 6379)],
            # "hosts": [("host.docker.internal", 6379)],
            "hosts": [("redis", 6379)],
        },
    },
}

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# If you are using AWS S3, DigitalOcean Spaces, or another cloud storage, you might need to set up DEFAULT_FILE_STORAGE in settings.py.

# DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
# AWS_STORAGE_BUCKET_NAME = "your-bucket-name"

SECURE_SSL_REDIRECT = False
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
SESSION_COOKIE_SAMESITE = "None"

# Use Django's key.pem and cert.pem
# SECURE_SSL_CERTIFICATE = os.path.join(BASE_DIR, "django-cert.pem")
# SECURE_SSL_KEY = os.path.join(BASE_DIR, "django-key.pem")

SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

# Increase file upload size
DATA_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100MB
FILE_UPLOAD_MAX_MEMORY_SIZE = 104857600  # 100MB


# Twilio API Credentials
TWILIO_ACCOUNT_SID = os.getenv("TWILIO_ACCOUNT_SID")
TWILIO_AUTH_TOKEN = os.getenv("TWILIO_AUTH_TOKEN")
TWILIO_API_KEY_SID = os.getenv("TWILIO_API_KEY_SID")
TWILIO_API_KEY_SECRET = os.getenv("TWILIO_API_KEY_SECRET")
